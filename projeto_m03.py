# -*- coding: utf-8 -*-
"""PROJETO M03

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1se1eOP1RMX_8TFOI87ENstJvfkxknuLr

SISTEMA BANCÁRIO

Crie uma lógia para simular um fluxo de um sistema bancário.

Esse programa deverá conter:
1.Um menu de seleção de operção;
2.Criação de contas;
3.Remoção de contas;
4.Listagem de todas as contas;
5.Adicionar/remover saldo;
6.Transferir valor entre contas;
7.Consultar saldo de uma conta específica.

As contas devem ser armazenadas em uma lista e cada lista deve ser um dicionário (chave-valor) contendo as seguintes chaves.
1.numero_conta
2.saldo_conta
"""

contas = []

#CRIAR CONTA
def criar_conta():
  verificador_de_contas = False
  dados_nova_conta = {}
  dados_nova_conta['numero_conta'] = input('Digite o número da nova conta\n>')

  for conta_em_consulta in contas:
    if conta_em_consulta['numero_conta'] == dados_nova_conta['numero_conta']:
      verificador_de_contas = True
      break

  if verificador_de_contas == True:
      print('\nO número da conta já existe.')

  else:
    dados_nova_conta['saldo_conta'] = float(input('Digite o saldo da nova conta\n>'))
    contas.append(dados_nova_conta)
    print('\nConta criada com sucesso')

#REMOVER CONTA
def remover_conta():
  numero_conta = input('Digite o número da conta para remover\n>')
  conta_encontrada = False

  for conta_em_consulta in contas:
    if conta_em_consulta['numero_conta'] == numero_conta:
      conta_encontrada = True
      contas.remove(conta_em_consulta)
      print('\n>Conta removida')

  if not conta_encontrada:
    print('\nEsta conta non ecsiste')

#LISTAR TODAS AS CONTAS
def listar_contas():
  if len(contas) == 0:
    print('\nNão há contas registradas')
  else:
    index = 1
    for conta_em_consulta in contas:
      if conta_em_consulta['saldo_conta'] >= 0:
        status = 'positivo'
      else:
        status = 'negativo'
      print(f'{index} - Numero da Conta: {conta_em_consulta["numero_conta"]} | Saldo da Conta: R$ {conta_em_consulta["saldo_conta"]:.2f} ({status})')

#ADICIONAR SALDO
def adicionar_saldo():
  numero_conta = input('Digite o número da conta\n>')

  for conta_em_consulta in contas:
    if conta_em_consulta['numero_conta'] == numero_conta:
      valor_credito = float(input('Digite o valor do crédito:\n R$ '))
      if valor_credito < 0:
        print('Valores negativos não são aceitos. Tente novamente')
        return

      else:
        conta_em_consulta['saldo_conta'] += valor_credito
        print('Saldo adicionado')

  if conta_em_consulta['numero_conta'] != numero_conta:
   print('Conta não encontrada. Tente novamente')

#REMOVER SALDO
def remover_saldo():
  numero_conta = input('Digite o número da conta\n>')

  for conta_em_consulta in contas:
    if conta_em_consulta['numero_conta'] == numero_conta:
      valor_debito = float(input('Digite o valor do débito:\n R$ '))
      if valor_debito < 0:
        print('Valores negativos não são aceitos. Tente novamente')
        return

      else:
        conta_em_consulta['saldo_conta'] -= valor_debito
        print('Saldo retirado')

  if conta_em_consulta['numero_conta'] != numero_conta:
   print('Conta não encontrada. Tente novamente')

#TRANSFERIR VALOR
def transferir_valor():
  conta_origem = input('Digite o número da sua conta\n>')
  verificador_etapa = 0

    #Procura Primeira Conta
  for conta_em_consulta in contas:
    if conta_em_consulta['numero_conta'] == conta_origem:
      conta_destino = input('Digite o número da conta destino\n>')
      verificador_etapa = 1

      if conta_origem != conta_destino:
      #Procura a segunda etapa
        for conta_destino_em_consulta in contas:
          if conta_destino_em_consulta['numero_conta'] == conta_destino:
            verificador_etapa = 3
            valor_de_transferencia = float(input('Digite o valor a ser transferido\n>'))

          #verifica se o valor é negativo
            if valor_de_transferencia < 0:
              print('Não é possível transferir valor negativo. Tente novamente')
              break

          #verifica se o valor é suficiente
            elif valor_de_transferencia > conta_em_consulta['saldo_conta']:
              print('Saldo insuficiente. Tente novamente')
              break

            else:
              conta_em_consulta['saldo_conta'] -= valor_de_transferencia
              conta_destino_em_consulta['saldo_conta'] += valor_de_transferencia
              print('\n>Transferência efetuada')
              break

        print()
      else:
        verificador_etapa == 2
        print('\n>Não é possível transferir para a mesma conta.')

  if verificador_etapa == 0:
    print('\nA sua conta não foi encontrada. Tente novamente.')
  elif verificador_etapa == 1:
    print('\n>A conta destino não foi encontrada. Tente novamente.')
  elif verificador_etapa == 2:
    print('\n>Não é possível transferir para a mesma conta.')


#CONSULTAR SALDO
def consultar_saldo_de_conta():
  numero_conta = input('Digite no número da conta para consultar o saldo\n>')
  for conta_em_consulta in contas:
    if conta_em_consulta['saldo_conta'] >= 0:
      status = 'positivo'
    else:
      status = 'negativo'
    print(f'\nO saldo em consulta é: R${conta_em_consulta["saldo_conta"]: .2f} ({status})')
    return

  print('Numero não encontrado. Tente novamente')



#MENU INICIAL
print('>Bem-Vendo ao Sistema Bancário')


while True:
  print('\n## MENU ##')
  print('0 - SAIR')
  print('1 - ENTRAR')
  print('2 - CRIAR CONTA')
  print('3 - REMOVER CONTA')
  print('4 - LISTAR TODAS AS CONTAS')
  print('5 - ADICIONAR SALDO')
  print('6 - REMOVER SALDO')
  print('7 - TRANSFERIR VALOR')
  print('8 - CONSULTAR SALDO')
  numero_operacao = input('Selecione a operação que deseja realizar\n>')

#SAIR
  if numero_operacao == '0':
    print('\nSistema encerrado.')
    break

#ENTRAR
  elif numero_operacao == '1':
    verificador_de_contas = True
    print('\nDigite os seus dados para login')
    numero_conta = input("\n>Numero da Conta")
    break

#CRIAR
  elif numero_operacao == '2':
    criar_conta()

#REMOVER
  elif numero_operacao == '3':
    remover_conta()

#LISTAR TODAS AS CONTAS
  elif numero_operacao == '4':
    listar_contas()

#ADICIONAR SALDO
  elif numero_operacao == '5':
    adicionar_saldo()

#REMOVER SALDO
  elif numero_operacao == '6':
    remover_saldo()

#TRANSFERIR VALOR
  elif numero_operacao == '7':
    transferir_valor()

#CONSULTAR SALDO
  elif numero_operacao == '8':
    consultar_saldo_de_conta()

#OPERAÇÃO INEXISTENTE
  else:
    print('OPERAÇÃO INVÁLIDA')